{"version":3,"sources":["components/contactListItem/ContactListItem.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","contact","name","number","ContactForm","state","onHandleSubmit","e","preventDefault","props","addNewContact","setState","onHandleChange","target","value","this","className","css","form","onSubmit","label","input","type","pattern","title","required","onChange","button","Component","ContactListItem","removeItem","id","item","onClick","prototype","PropTypes","string","isRequired","func","ContactList","contacts","removeContact","map","arrayOf","shape","Filter","App","filter","uuidv4","find","toUpperCase","alert","filterContacts","includes","onChangeFilter","prev","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,mBCAhED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,yKCGlDC,EAAU,CAAEC,KAAM,GAAIC,OAAQ,IAwDrBC,E,4MArDbC,M,eAAaJ,G,EAEbK,eAAiB,SAACC,GAChBA,EAAEC,iBACF,EAAKC,MAAMC,cAAX,eAA8B,EAAKL,QACnC,EAAKM,SAAL,eAAmBV,K,EAGrBW,eAAiB,SAACL,GAChB,MAAwBA,EAAEM,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,EAAKH,SAAL,eAAiBT,EAAOY,K,4CAG1B,WACE,MAAyBC,KAAKV,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,mCACE,uBAAMa,UAAWC,IAAIC,KAAMC,SAAUJ,KAAKT,eAA1C,UACE,wBAAOU,UAAWC,IAAIG,MAAtB,iBAEE,uBACEJ,UAAWC,IAAII,MACfC,KAAK,OACLpB,KAAK,OACLY,MAAOZ,EACPqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUX,KAAKH,oBAGnB,wBAAOI,UAAWC,IAAIG,MAAtB,kBAEE,uBACEJ,UAAWC,IAAII,MACfC,KAAK,MACLpB,KAAK,SACLY,MAAOX,EACPoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUX,KAAKH,oBAGnB,wBAAQI,UAAWC,IAAIU,OAAQL,KAAK,SAApC,kC,GA7CgBM,a,iCCFpBC,EAAkB,SAAC,GAAsC,IAApC3B,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQ2B,EAAqB,EAArBA,WAAYC,EAAS,EAATA,GAKnD,OACE,qBAAIf,UAAWC,IAAIe,KAAnB,UACE,+BAAO9B,IADT,MACwB,+BAAOC,IAC7B,wBAAQa,UAAWC,IAAIU,OAAQM,QAPb,WACpBH,EAAWC,IAMT,wBAOSF,IAEfA,EAAgBK,UAAY,CAC1BhC,KAAMiC,IAAUC,OAAOC,WACvBlC,OAAQgC,IAAUC,OAAOC,WACzBP,WAAYK,IAAUG,KAAKD,WAC3BN,GAAII,IAAUC,OAAOC,YCrBvB,IAAME,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,6BACGD,EAASE,KAAI,gBAAGX,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEE4B,GAAIA,EACJ7B,KAAMA,EACNC,OAAQA,EACR2B,WAAYW,GAJPV,SAWAQ,IAEfA,EAAYL,UAAY,CACtBM,SAAUL,IAAUQ,QAClBR,IAAUS,MAAM,CACdb,GAAII,IAAUC,OAAOC,WACrBnC,KAAMiC,IAAUC,OAAOC,WACvBlC,OAAQgC,IAAUC,OAAOC,cAG7BI,cAAeN,IAAUG,KAAKD,Y,6BC1B1BQ,EAAS,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,SAAUZ,EAAY,EAAZA,MAK1B,OACE,mCACE,wBAAOE,UAAWC,IAAIG,MAAtB,kCAEE,uBACEJ,UAAWC,IAAII,MACfC,KAAK,OACLR,MAAOA,EACPY,SAZe,SAACnB,GACtBmB,EAASnB,EAAEM,OAAOC,gBAkBP+B,IAEfA,EAAOX,UAAY,CACjBR,SAAUS,IAAUG,KAAKD,WACzBvB,MAAOqB,IAAUC,OAAOC,Y,ICiDXS,E,4MAtEbzC,MAAQ,CACNmC,SAAU,CACR,CAAET,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE4B,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,cAEhD4C,OAAQ,I,EAGVrC,cAAgB,YAAuB,IAAD,EAAnBR,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACjBF,EAAU,CACd8B,GAAIiB,cACJ9C,OACAC,UAGF,YAAKE,MAAMmC,SACRS,MAAK,SAAChD,GAAD,OAAaA,EAAQC,KAAKgD,gBAAkBhD,EAAKgD,wBADzD,SAEIC,MAFJ,UAEajD,EAFb,2BAIA,EAAKS,UAAS,gBAAG6B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBvC,S,EAI5BmD,eAAiB,WACf,OAAO,EAAK/C,MAAMmC,SAASO,QAAO,SAAC9C,GAAD,OAChCA,EAAQC,KAAKgD,cAAcG,SAAS,EAAKhD,MAAM0C,OAAOG,mB,EAI1DI,eAAiB,SAACP,GAChB,EAAKpC,SAAS,CAAEoC,Y,EAGlBN,cAAgB,SAACV,GACf,EAAKpB,UAAS,SAAC4C,GAAD,MAAW,CACvBf,SAAUe,EAAKf,SAASO,QAAO,SAAC9C,GAAD,OAAaA,EAAQ8B,KAAOA,U,uDAI/D,WACE,IAAMS,EAAWgB,KAAKC,MAAMC,aAAaC,QAAQ,aACjDnB,GAAYzB,KAAKJ,SAAS,CAAE6B,e,gCAG9B,SAAmBoB,EAAWC,GAC5BA,EAAUrB,WAAazB,KAAKV,MAAMJ,SAChCyD,aAAaI,QAAQ,WAAYN,KAAKO,UAAUhD,KAAKV,MAAMmC,a,oBAG/D,WACE,OACE,qCACE,2CACA,cAAC,EAAD,CAAa9B,cAAeK,KAAKL,gBAEjC,0CACA,cAAC,EAAD,CAAQI,MAAOC,KAAKV,MAAM0C,OAAQrB,SAAUX,KAAKuC,iBAEjD,cAAC,EAAD,CACEd,SAAUzB,KAAKqC,iBACfX,cAAe1B,KAAK0B,uB,GAhEZb,aCDlBoC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BpE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.7940a132.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1npan\",\"button\":\"ContactListItem_button__3EXJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\n\nconst contact = { name: \"\", number: \"\" };\n\nclass ContactForm extends Component {\n  state = { ...contact };\n\n  onHandleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addNewContact({ ...this.state });\n    this.setState({ ...contact });\n  };\n\n  onHandleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form className={css.form} onSubmit={this.onHandleSubmit}>\n          <label className={css.label}>\n            Name\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.onHandleChange}\n            />\n          </label>\n          <label className={css.label}>\n            Phone\n            <input\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.onHandleChange}\n            />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactListItem.module.css\";\n\nconst ContactListItem = ({ name, number, removeItem, id }) => {\n  const onHandleClick = () => {\n    removeItem(id);\n  };\n\n  return (\n    <li className={css.item}>\n      <span>{name}</span> : <span>{number}</span>\n      <button className={css.button} onClick={onHandleClick}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.prototype = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  removeItem: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../contactListItem/ContactListItem\";\n\nconst ContactList = ({ contacts, removeContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          removeItem={removeContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  removeContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Filter.module.css\";\n\nconst Filter = ({ onChange, value }) => {\n  const onHandleChange = (e) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          value={value}\n          onChange={onHandleChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.prototype = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.state.contacts\n      .find((contact) => contact.name.toUpperCase() === name.toUpperCase())\n      ?.alert(`${name}is already in contacts`);\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  filterContacts = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(this.state.filter.toUpperCase())\n    );\n  };\n\n  onChangeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  removeContact = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    contacts && this.setState({ contacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.contacts !== this.state.contact &&\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n\n        <ContactList\n          contacts={this.filterContacts()}\n          removeContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"button\":\"ContactForm_button__1xr6L\"};"],"sourceRoot":""}